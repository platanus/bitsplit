FORMAT: 1A
HOST: http://localhost:5000/api/v1/

# Bitsplit

## Sessions [/sessions]

### Create new session [POST]

+ Request (application/json)

        {
            "email": "example@example.com",
            "password": "bestPa55W0rd3ver"
        }

+ Response 200 (application/json)

        {
             "data": {
                 "id": "1",
                 "type": "session",
                 "attributes": {
                     "email": "example@example.com",
                     "api_key": "th3b3stAP1K3Y",
                     "authentication_token": "smnozAAbYnEX2xVRfS5R"
                 }
             }
         }
        
### Delete session [DELETE]

+ Request (application/json)

    + Headers

            X-User-Email: example@example.com
            X-User-Token: smnozAAbYnEX2xVRfS5R
            
+ Response 204

        
## Users [/users]

### Get current user [GET]


+ Request (application/json)

    + Headers

            X-User-Email: example@example.com
            X-User-Token: smnozAAbYnEX2xVRfS5R

            
+ Response 200 (application/json)
        
    Si el usuario no se ha autenticado con Splitwise, entonces `picture_url` será `null`

    + Body

            {
                 "data": {
                     "id": "1",
                     "type": "user",
                     "attributes": {
                         "email": "example@gmail.com",
                         "api_key": "th3b3stAP1K3Y",
                         "authentication_token": "smnozAAbYnEX2xVRfS5R",
                         "picture_url": {
                            "small": "https://www.theBestImgHostingSite.com/small-img.jpeg",
                            "medium": "https://www.theBestImgHostingSite.com/medium-img.jpeg",
                            "large": "https://www.theBestImgHostingSite.com/large-img.jpeg"
                         }
                     }
                 }
             }
        


### Create a new user [POST]

+ Request (application/json)

        {
            "email": "example@example.com",
            "password": "bestPa55W0rd3ver",
            "password_confirmation": "bestPa55W0rd3ver",
            "api_key": "th3b3stAP1K3Y",
            "api_secret": "th3B3s1S3Cr31"
        }

+ Response 200 (application/json)

        {
             "data": {
                 "id": "1",
                 "type": "user",
                 "attributes": {
                     "email": "example@gmail.com",
                     "api_key": "th3b3stAP1K3Y",
                     "authentication_token": "smnozAAbYnEX2xVRfS5R"
                 }
             }
         }


### Update existing user [PATCH]
+ Request (application/json)
The `password` field is only required if the `api_key` or `api_secret` fields are being updated.

    + Headers

            X-User-Email: example@example.com
            X-User-Token: smnozAAbYnEX2xVRfS5R
            
    + Body

            {
                "email": "new_example@example.com",
                "password": "bestPa55W0rd3ver",
                "api_key": "th3b3stAP1K3Y_v2",
                "api_secret": "th3B3s1S3Cr31"
            }
            
+ Response 200 (application/json)

        {
             "data": {
                 "id": "1",
                 "type": "user",
                 "attributes": {
                     "email": "new_example@gmail.com",
                     "api_key": "th3b3stAP1K3Y_v2",
                     "authentication_token": "smnozAAbYnEX2xVRfS5R"
                 }
             }
         }
        
        
### Delete an existing user [DELETE]

+ Request (application/json)

    + Headers

            X-User-Email: example@example.com
            X-User-Token: smnozAAbYnEX2xVRfS5R
            
    + Body

            {
                "email": "example@example.com",
                "password": "bestPa55W0rd3ver"
            }
        
        
+ Response 204 (application/json)

        
## Quotations [/quotations]
### Create new quotation [POST]



+ Request (application/json)

    + Headers

            X-User-Email: example@example.com
            X-User-Token: smnozAAbYnEX2xVRfS5R

    + Body

            {
                "amount": 1000
            }


+ Response 200 (application/json)

        {
            "data": {
                "quotation": {
                    "amount_clp": [
                      "1004.09",
                      "CLP"
                    ],
                    "amount_btc": [
                    "0.00016961",
                    "BTC"
                    ]
                }
            }
        }

## Balances [/balances]
### Get balance [GET]



+ Request (application/json)

    + Headers

            X-User-Email: example@example.com
            X-User-Token: smnozAAbYnEX2xVRfS5R



+ Response 200 (application/json)
    
    >>`amount`: Cantidad total asociada a la cuenta
    >`available_amount`: Cantidad total asociada a la cuenta
    >`frozen_amount`: Cantidad retenida en órdenes pendientes
    >`pending_withdraw_amount`: Cantidad retenida en proceso de retiro

    + body

            { 
                "data": {
                    "balance": {
                        "CLP": {
                            "amount": "0.0",
                            "available_amount": "0.0",
                            "frozen_amount": "0.0",
                            "pending_withdraw_amount": "0.0"
                        },
                        "BTC": {
                            "amount": "0.0",
                            "available_amount": "0.0",
                            "frozen_amount": "0.0",
                            "pending_withdraw_amount": "0.0"
                        }
                    }
                }
            }


## Payments [/payments]
### Create new payment [POST]


+ Request (application/json)

    + Headers

            X-User-Email: example@example.com
            X-User-Token: smnozAAbYnEX2xVRfS5R

    + Body

            {
                "payment_amount": 0.00227014,
                "receiver_email": receiver_example@example.com
            }


+ Response 200 (application/json)


        {
            "data": {
                "id": "1",
                "type": "payment",
                "attributes": {
                    "sender_email": "example1@example.com",
                    "receiver_email": "example2@example.com",
                    "amount": 0.0028859014,
                    "completed": true,
                    "invoice_id": 850,
                    "created_at": "2020-04-21T22:16:59.731Z"
                }
            }
        }
        
        
### Get payments record [GET]

+ Request (application/json)

    + Headers

            X-User-Email: example@example.com
            X-User-Token: smnozAAbYnEX2xVRfS5R

            
+ Response 200 (application/json)

        {
            "data": [
                {
                    "id": "2",
                    "type": "payment",
                    "attributes": {
                        "sender_email": "example0@example.com",
                        "receiver_email": "example1@example.com",
                        "amount": 0.00227014,
                        "completed": true,
                        "invoice_id": 848,
                        "created_at": "2020-04-21T21:47:42.915Z"
                    }
                },
                {
                    "id": "1",
                    "type": "payment",
                    "attributes": {
                        "sender_email": "example1@example.com",
                        "receiver_email": "example0@example.com",
                        "amount": 0.00238859014,
                        "completed": true,
                        "invoice_id": 847,
                        "created_at": "2020-04-21T21:47:15.549Z"
                    }
                },
                {
                    "id": "3",
                    "type": "payment",
                    "attributes": {
                        "sender_email": "example1@example.com",
                        "receiver_email": "example0@example.com",
                        "amount": 0.00288859014,
                        "completed": true,
                        "invoice_id": 849,
                        "created_at": "2020-04-21T21:51:49.047Z"
                    }
                }
            ]
        }
                

        

## Splitwise API connection [/splitwise]
### Create new url for api connection [POST]

+ Request (application/json)

    + Headers

            X-User-Email: example@example.com
            X-User-Token: smnozAAbYnEX2xVRfS5R
            
+ Response 200 (application/json)

        {
            "data": {
                "type": "splitwise",
                "attributes": {
                    "authorize_url": "https://secure.splitwise.com/authorize?oauth_token=th3B3s10Au1hT0k3n"
                }
            }
        }
        
## Firebase [/firebase]
### Update notification seen status [PUT]

+ Request (application/json)

    + Headers

            X-User-Email: example@example.com
            X-User-Token: smnozAAbYnEX2xVRfS5R
    + Body

            {
                "notification_token": "-M5y4cigQLy2bwsrSFh2"
            }
            
+ Response 200