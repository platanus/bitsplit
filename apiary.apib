FORMAT: 1A
HOST: http://localhost:5000/api/v1/

# Bitsplit

## Sessions [/sessions]

### Create new session [POST]

+ Request (application/json)

        {
            "email": "example@example.com",
            "password": "bestPa55W0rd3ver"
        }

+ Response 200 (application/json)

        {
             "data": {
                 "id": "1",
                 "type": "session",
                 "attributes": {
                     "email": "example@example.com",
                     "api_key": "th3b3stAP1K3Y",
                     "authentication_token": "smnozAAbYnEX2xVRfS5R"
                 }
             }
         }
        
### Delete session [DELETE]

+ Request (application/json)

    + Headers

            X-User-Email: example@example.com
            X-User-Token: smnozAAbYnEX2xVRfS5R
            
+ Response 204

        
## Users [/users]

### Get current user [GET]


+ Request (application/json)

    + Headers

            X-User-Email: example@example.com
            X-User-Token: smnozAAbYnEX2xVRfS5R

            
+ Response 200 (application/json)

        {
             "data": {
                 "id": "1",
                 "type": "user",
                 "attributes": {
                     "email": "example@gmail.com",
                     "api_key": "th3b3stAP1K3Y",
                     "authentication_token": "smnozAAbYnEX2xVRfS5R"
                 }
             }
         }
        


### Create a new user [POST]

+ Request (application/json)

        {
            "email": "example@example.com",
            "password": "bestPa55W0rd3ver",
            "password_confirmation": "bestPa55W0rd3ver",
            "api_key": "th3b3stAP1K3Y",
            "api_secret": "th3B3s1S3Cr31"
        }

+ Response 200 (application/json)

        {
             "data": {
                 "id": "1",
                 "type": "user",
                 "attributes": {
                     "email": "example@gmail.com",
                     "api_key": "th3b3stAP1K3Y",
                     "authentication_token": "smnozAAbYnEX2xVRfS5R"
                 }
             }
         }


### Update existing user [PATCH]
+ Request (application/json)
The `password` field is only required if the `api_key` or `api_secret` fields are being updated.

    + Headers

            X-User-Email: example@example.com
            X-User-Token: smnozAAbYnEX2xVRfS5R
            
    + Body

            {
                "email": "new_example@example.com",
                "password": "bestPa55W0rd3ver",
                "api_key": "th3b3stAP1K3Y",
                "api_secret": "th3B3s1S3Cr31"
            }
            
+ Response 200 (application/json)

            true
        
        
### Delete an existing user [DELETE]

+ Request (application/json)

    + Headers

            X-User-Email: example@example.com
            X-User-Token: smnozAAbYnEX2xVRfS5R
            
    + Body

            {
                "email": "example@example.com",
                "password": "bestPa55W0rd3ver"
            }
        
        
+ Response 204 (application/json)

        
## Quotations [/quotations]
### Create new quotation [POST]



+ Request (application/json)

    + Headers

            X-User-Email: example@example.com
            X-User-Token: smnozAAbYnEX2xVRfS5R

    + Body

            {
                "amount": 1000
            }


+ Response 200 (application/json)

        {
            "data": {
                "quotation": {
                    "amount_clp": [
                      "1004.09",
                      "CLP"
                    ],
                    "amount_btc": [
                    "0.00016961",
                    "BTC"
                    ]
                }
            }
        }

## Balances [/balances]
### Get balance [GET]



+ Request (application/json)

    + Headers

            X-User-Email: example@example.com
            X-User-Token: smnozAAbYnEX2xVRfS5R



+ Response 200 (application/json)
    
    >>`amount`: Cantidad total asociada a la cuenta
    >`available_amount`: Cantidad total asociada a la cuenta
    >`frozen_amount`: Cantidad retenida en órdenes pendientes
    >`pending_withdraw_amount`: Cantidad retenida en proceso de retiro

    + body

            { 
                "data": {
                    "balance": {
                        "CLP": {
                            "amount": "0.0",
                            "available_amount": "0.0",
                            "frozen_amount": "0.0",
                            "pending_withdraw_amount": "0.0"
                        },
                        "BTC": {
                            "amount": "0.0",
                            "available_amount": "0.0",
                            "frozen_amount": "0.0",
                            "pending_withdraw_amount": "0.0"
                        }
                    }
                }
            }